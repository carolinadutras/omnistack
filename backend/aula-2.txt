importando express para poder consumir as variaveis desta biblioteca   

const express = require('express');

const app = express();

como fazer para obter resposta, o get é um metodo de app e vai receber como parametro um caminho
o segundo parametro desta função é uma outra função e vai ser feita como arrow function
a arrow function recebe 2 parametros de forma automatica pelo express e são sempre fixos
req ou request de requisição e o res de response 

essa requisição poe conter informações- a requisição é tudo q é recebido pelo front-end
METODOS HTTP
os principais metodos que vamos usar é o get(receber informação), post(criar informação), put(editar recurso), delete(apaga)
get é o unico que conseguimos acessar nativo
para testar os outros metodos intalar insomnia.rest 

tipos de parametros:

Query Params: request.query (filtro, ordenação, paginação....)

os query params são 99% das vezes usados no get.
para poder filtrar eu faço como query params (search - )


Route Params: request.params(identificar um recurso na alteração ou remoção)

usado no metodo put e delete (eu estou falando de 1 usuário)
aparece no console 
Body: o principal (usado para criar- usa-se aspas duplas)
request.body


de primeira ele virá undefined pois não avisei o express que está vindo um json

app.post('/', (request, response)=>{
o send envia um texto como resposta(string).
return response.send('Hello World');
mas nesse caso como tem que haver uma comunicação entre o front-end e o backend vamos usar o json para essa comunicação
para enviar o json não pode ser simplesmente uma string, precisa ser um objeto- pode ser um usuario, produtos...
    return response.json({message: 'Hello omnistack blábá nodemon! outra coisa uhuu'});

o node depois de iniciado não fica olhando o código, ou seja se atualizar o código e não reiniciar o node não vai atualizar a página, para isso não aconetcer add extenção yarn add nodemon -D **(-d é dependencia de desenvolvimento)- isso siguinifica que ela só é necessária para o desenvolvedor e não vai pra produção- ele fica observando o js


})
escolhendo a porta que vai abrir no servidor quando a aplicação comecar a funcionar

app.listen(3333); 
